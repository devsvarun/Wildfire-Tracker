{"version":3,"sources":["components/LocationMarker.js","components/LocationInfoBox.js","components/Map.js","images/spinner.gif","components/Loader.js","components/Header.js","components/ThemeButton.js","components/EventSelector.js","App.js","reportWebVitals.js","index.js"],"names":["LocationMarker","lat","lng","element","onClick","locationIcon","volcanoIcon","fireIcon","className","icon","LocationInfoBox","info","id","title","Map","zoom","eventData","theme","eventList","useState","locationInfo","setLocationInfo","width","window","innerWidth","height","innerHeight","latitude","longitude","viewport","setViewport","markers","map","ev","includes","categories","geometry","coordinates","mapStyle","mapboxAccessToken","onMove","evt","defaultProps","Loader","src","spinner","alt","Header","ThemeButton","setTheme","setEventList","buttonText","setButtonText","setCurrTheme","Button","size","variant","EventSelector","updateEventList","fireSelect","setFireSelect","volcSelect","setVolcSelect","filter","e","prevList","App","setEventData","loading","setLoading","useEffect","fetchEvents","a","fetch","res","json","events","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24344f54.chunk.js","sourcesContent":["import { Icon } from '@iconify/react'\r\nimport volcanoIcon from '@iconify/icons-ic/round-volcano'\r\nimport fireIcon from '@iconify/icons-mdi/fire-alert'\r\n\r\nconst LocationMarker = ({ lat, lng, element, onClick }) => {\r\n    let locationIcon = null;\r\n    switch (element) {\r\n        case 'wildfires':\r\n            locationIcon = fireIcon;\r\n            break;\r\n        case 'volcanoes':\r\n            locationIcon = volcanoIcon;\r\n            break;\r\n        default:\r\n            locationIcon = fireIcon;\r\n    }\r\n    return (\r\n        <div className=\"location-marker\" onClick={onClick}>\r\n            <Icon icon={locationIcon} className=\"location-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationMarker\r\n","const LocationInfoBox = ({ info }) => {\r\n  return (\r\n    <div className=\"location-info\">\r\n      <h2>Event Location Info</h2>\r\n      <ul>\r\n        <li>\r\n          ID: <strong>{info.id}</strong>\r\n        </li>\r\n        <li>\r\n          TITLE: <strong>{info.title}</strong>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationInfoBox;\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport ReactMapGL, { Marker } from \"react-map-gl\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport LocationMarker from \"./LocationMarker\";\r\nimport LocationInfoBox from \"./LocationInfoBox\";\r\n\r\nconst Map = ({ lat, lng, zoom, eventData, theme, eventList }) => {\r\n  const [locationInfo, setLocationInfo] = useState(null);\r\n\r\n  const [viewport, setViewport] = useState({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    latitude: lat,\r\n    longitude: lng,\r\n    zoom: zoom,\r\n  });\r\n\r\n  const markers = eventData.map((ev) => {\r\n    if (eventList.includes(ev.categories[0].id)) {\r\n      return (\r\n        <Marker\r\n          latitude={ev.geometry[0].coordinates[1]}\r\n          longitude={ev.geometry[0].coordinates[0]}\r\n        >\r\n          <LocationMarker\r\n            lat={ev.geometry[0].coordinates[1]}\r\n            lng={ev.geometry[0].coordinates[0]}\r\n            element={ev.categories[0].id}\r\n            onClick={() => setLocationInfo({ id: ev.id, title: ev.title })}\r\n          />\r\n        </Marker>\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n  let mapStyle = \"\";\r\n  if (!theme) {\r\n    mapStyle = \"mapbox://styles/mapbox/dark-v10\";\r\n  }\r\n  else {\r\n    mapStyle = \"mapbox://styles/mapbox/light-v10\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <ReactMapGL\r\n        mapStyle={mapStyle}\r\n        mapboxAccessToken={\r\n          \"pk.eyJ1IjoiZGV2c3ZhcnVuIiwiYSI6ImNsMHk1ZzUwMDBjeWwzam8xeHJiaGc3cmkifQ.vFYhJtxz0W9ubCrpZcraRg\"\r\n        }\r\n        {...viewport}\r\n        onMove={evt => setViewport(evt.viewport)}\r\n      >\r\n        {markers}\r\n      </ReactMapGL>\r\n      {locationInfo && <LocationInfoBox info={locationInfo} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nMap.defaultProps = {\r\n  lat: 37.7577,\r\n  lng: -122.4376,\r\n  zoom: 0,\r\n};\r\n\r\nexport default Map;\r\n","export default __webpack_public_path__ + \"static/media/spinner.08e1278c.gif\";","import spinner from \"../images/spinner.gif\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <img src={spinner} alt=\"loading\" />\r\n      <h2>Fetching Data</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react'\r\nimport { Icon } from \"@iconify/react\";\r\nimport locationIcon from \"@iconify/icons-mdi/fire-alert\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1><Icon icon={locationIcon} /> Wildfire Tracker (NASA API)</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst ThemeButton = ({ theme, setTheme, eventList, setEventList }) => {\r\n    const [buttonText, setButtonText] = useState(\"Light\");\r\n    const setCurrTheme = setTheme;\r\n    function buttonHandler() {\r\n        if (!theme) {\r\n            setButtonText(\"Dark\");\r\n            setCurrTheme(true);\r\n        }\r\n        else {\r\n            setButtonText(\"Light\");\r\n            setCurrTheme(false);\r\n        }\r\n    }\r\n    return (\r\n        <div className='ThemeButton'>\r\n            <Button onClick={buttonHandler} size=\"sm\" variant={theme ? \"outline-dark\" : \"outline-light\"}>{buttonText}</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemeButton","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport volcanoIcon from '@iconify/icons-ic/round-volcano';\r\nimport fireIcon from '@iconify/icons-mdi/fire-alert';\r\n\r\nconst EventSelector = ({ eventList, setEventList }) => {\r\n    const updateEventList = setEventList;\r\n    const [fireSelect, setFireSelect] = useState(true);\r\n    const [volcSelect, setVolcSelect] = useState(false);\r\n\r\n    function fireHandler() {\r\n        if (eventList.includes('wildfires')) {\r\n            updateEventList(eventList => eventList.filter(e => e !== 'wildfires'));\r\n            setFireSelect(false);\r\n        }\r\n        else {\r\n            updateEventList(prevList => [...prevList, 'wildfires']);\r\n            setFireSelect(true);\r\n        }\r\n    }\r\n    function volcanoHandler() {\r\n        if (eventList.includes('volcanoes')) {\r\n            updateEventList(eventList => eventList.filter(e => e !== 'volcanoes'));\r\n            setVolcSelect(false);\r\n        }\r\n        else {\r\n            updateEventList(prevList => [...prevList, 'volcanoes']);\r\n            setVolcSelect(true);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"EventSelector\">\r\n            <div className={fireSelect? 'Selector' : 'DeSelector'} onClick={fireHandler}>\r\n                <Icon icon={fireIcon} className=\"location-icon\" />\r\n            </div>\r\n            <div className={volcSelect ? 'Selector': 'DeSelector'} onClick={volcanoHandler}>\r\n                <Icon icon={volcanoIcon} className=\"location-icon\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EventSelector","import { useState, useEffect } from \"react\";\nimport Map from \"./components/Map\";\nimport Loader from \"./components/Loader\";\nimport Header from \"./components/Header\";\nimport ThemeButton from \"./components/ThemeButton\";\nimport EventSelector from \"./components/EventSelector\";\n\nfunction App() {\n  const [eventData, setEventData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [theme, setTheme] = useState(false);\n  const [eventList, setEventList] = useState(['wildfires']);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true);\n      const res = await fetch(\"https://eonet.sci.gsfc.nasa.gov/api/v3/events\");\n      const { events } = await res.json();\n\n      setEventData(events);\n      setLoading(false);\n    };\n    fetchEvents();\n  }, []);\n\n\n  return (\n    <div>\n      <Header />\n      {!loading ? \n      <>\n      <Map eventData={eventData} theme={theme} eventList={eventList} />\n      <ThemeButton theme={theme} setTheme={setTheme} />\n      <EventSelector eventList={eventList} setEventList = {setEventList} />\n      </> : <Loader />}\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}